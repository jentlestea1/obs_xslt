<?xml version="1.0" encoding="utf-8"?><ObsApplication xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="file:/D:/Projects/ObsFramework/models/xsd/ObsFrameworkAppModel.xsd"><FSM status="provided" kind="component" name="Nominal_FSM" type="FSM/CC_FSM"><Description>FSM for the sample application class. Top-level FSM that controls nominal mode operation.
            To each state of this FSM, a nominal operational model is associated. To each state, another FSM is attached 
            that implements the FSM logic of the corresponding nominal mode. </Description><FsmState status="provided" kind="interface" type="FSM/FsmState"><Index status="provided" kind="property" type="int" value="0"/><NextState status="provided" kind="property" type="component" value="SAM_FsmState" name="NextState"/><NestedFsmActivatorWithEndState status="provided" kind="component" name="SBY_FsmState" type="FSM/DC_NestedFsmActivatorWithEndState"><Description>FSM for the SBY mode.</Description><NestedFSM status="provided" kind="property" type="component" value="SBY_FSM" name="TargetFsm"/><TargetFsmState kind="property" name="TargetState" type="component" value="END" status="provided"/></NestedFsmActivatorWithEndState></FsmState><FsmState status="provided" kind="interface" type="FSM/FsmState"><Index status="provided" kind="property" type="int" value="1"/><NestedFsmActivatorWithExitCheck status="provided" kind="component" name="SAM_FsmState" type="FSM/DC_NestedFsmActivatorWithExitCheck"><Description>FsmState component for the SAM mode.</Description><NestedFSM status="provided" kind="property" type="component" value="SAM_FSM" name="TargetFsm"/><TargetFsmState kind="property" name="TargetState" type="component" value="SAM_SunPointing" status="provided"/></NestedFsmActivatorWithExitCheck></FsmState><FsmState status="provided" kind="interface" type="FSM/FsmState"><Index status="provided" kind="property" type="int" value="2"/><NextState status="provided" kind="property" type="component" value="SAM_FsmState" name="NextState"/><Custom status="missing" kind="component" name="SCM_FsmState" type="FSM/DC_SCM_FsmState"><Description>Sample FsmState application class. This FsmState models the SCM mode logic.</Description><InitAction status="generable" kind="operation"><Description>Initialization action for the sample FsmState application class.</Description></InitAction><ContinuationAction kind="operation" status="generable"><Description>Activate the SCM_FSM state machine.</Description></ContinuationAction><TerminationCheck kind="operation" status="generable"><Description>Termination action for the sample FsmState application class.</Description></TerminationCheck></Custom></FsmState><FsmState status="provided" kind="interface" type="FSM/FsmState"><Index status="provided" kind="property" type="int" value="3"/><NextState kind="property" type="component" value="SAM_FsmState" status="provided" name="NextState"/><Custom kind="component" name="OCM_FsmState" type="FSM/DC_OCM_FsmState" status="missing"><Description>Sample FsmState application class. This FsmState models the OCM mode logic.</Description><InitAction kind="operation" status="generable"><Description>Initialization action for the sample FsmState application class.</Description></InitAction><ContinuationAction kind="operation" status="generable"><Description>Activate the OCM_FSM state machine.</Description></ContinuationAction><TerminationCheck kind="operation" status="generable"><Description>Termination action for the sample FsmState application class.</Description></TerminationCheck></Custom></FsmState><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" name="TargetState" type="component" value="OCM_FsmState" status="provided"/><FromFsmEvent kind="component" type="FSM/DC_FromFsmEvent" name="SAM_to_OCM" status="provided"><Description>FsmEvent component triggering transition from SAM to OCM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="SAM_FsmState" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" type="component" value="SAM_FsmState" status="provided" name="TargetState"/><FromFsmEvent kind="component" name="OCM_to_SAM" type="FSM/DC_FromFsmEvent" status="provided"><Description>FsmEvent component triggering transition from OCM to SAM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="OCM_FsmState" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" type="component" value="SAM_FsmState" status="provided" name="TargetState"/><FromFsmEvent kind="component" name="SCM_to_SAM" type="FSM/DC_FromFsmEvent" status="provided"><Description>FsmEvent component triggering transition from SCM to SAM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="SCM_FsmState" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" type="component" value="SCM_FsmState" status="provided" name="TargetState"/><FromFsmEvent kind="component" name="SAM_to_SCM" type="FSM/DC_FromFsmEvent" status="provided"><Description>FsmEvent component triggering transition from SAM to SCM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="SAM_FsmState" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" type="component" value="OCM_FsmState" status="provided" name="TargetState"/><FromFsmEvent kind="component" name="SCM_to_OCM" type="FSM/DC_FromFsmEvent" status="provided"><Description>FsmEvent component triggering transition from SCM to OCM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="SCM_FsmState" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" type="component" value="SCM_FsmState" status="provided" name="TargetState"/><FromFsmEvent kind="component" name="OCM_to_SCM" type="FSM/DC_FromFsmEvent" status="provided"><Description>FsmEvent component triggering transition from OCM to SCM mode.</Description><FromFsmState kind="property" name="StartingState" type="component" value="OCM_FsmState" status="provided"/></FromFsmEvent></FsmEvent></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="SBY_FSM"><Description>FSM for the sample application. This FSM models the SBY mode logic.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><NextState kind="property" type="component" value="SBY_PostSeparation" status="provided" name="NextState"/><Custom kind="component" name="SBY_PreSeparation" type="FSM/DC_SBY_PreSepFsmState" status="missing"><Description>Sample FsmState application class. FsmState component for the SBY preseparation mode.</Description><InitAction kind="operation" status="generable"><Description>Reset the telemetry manager, reset the telecommand manager, and reset the parameter database.</Description></InitAction><TerminationCheck kind="operation" status="generable"><Description>Terminate when the separation is detected.</Description></TerminationCheck></Custom></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><NextState kind="property" type="component" value="END" status="provided" name="NextState"/><Custom kind="component" name="SBY_PostSeparation" type="FSM/DC_SBY_PostSepFsmState" status="missing"><Description>Sample FsmState application class. FsmState component for the SBY postseparation mode.</Description><InitAction kind="operation" status="generable"><Description>Perform actions to be done upon detection of separation.</Description></InitAction><ExitAction kind="operation" status="generable"><Description>Perform action to be done just before exiting the this mode.</Description></ExitAction><TerminationCheck kind="operation" status="generable"><Description>Terminate when count-down is finished.</Description></TerminationCheck></Custom></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="2" status="provided"/><NextState kind="property" type="component" value="END" status="provided" name="NextState"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="END"><Description>Dummy FsmState component for the end state of an FSM.</Description></DummyFsmState></FsmState></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="SAM_FSM"><Description>FSM for the sample application. This FSM models the SAM mode logic.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><NextState kind="property" type="component" value="SAM_SunPointing" status="provided" name="NextState"/><UnstableFsmState kind="component" type="FSM/DC_UnstableFsmState" status="provided" name="SAM_SunAcquisition"><Description>FsmState component for the SAM-SunAcquisition submode.</Description></UnstableFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="SAM_SunPointing"><Description>FsmState component for the SAM-SunPointing submode.</Description></DummyFsmState></FsmState></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="OCM_FSM"><Description>FSM for the sample application. This FSM models the OCM mode logic.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><NextState kind="property" type="component" value="OCM_Pointing" status="provided" name="NextState"/><UnstableFsmState kind="component" type="FSM/DC_UnstableFsmState" status="provided" name="OCM_Slewing"><Description>FsmState component for the OCM-Slewing submode.</Description></UnstableFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="OCM_Pointing"><Description>FsmState component for the OCM-Pointing submode.</Description></DummyFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="2" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="OCM_Thrusting"><Description>FsmState component for the OCM-Thrusting submode.</Description></DummyFsmState></FsmState></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="SCM_FSM"><Description>FSM for the sample application. This FSM models the SCM mode logic.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="SCM_Slewing"><Description>FsmState component for the SCM-Slewing submode.</Description></DummyFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="SCM_Pointing"><Description>FsmState component for the SCM-Pointing submode.</Description></DummyFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="2" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="SCM_Scanning"><Description>FsmState component for the SCM-Scanning submode.</Description></DummyFsmState></FsmState></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="SM_FSM"><Description>FSM for the sample application class. Top-level FSM that controls survival mode operation.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><NextState kind="property" type="component" value="SM_PostSeparation" status="provided" name="NextState"/><Custom kind="component" type="FSM/DC_SM_PreSepFsmState" status="missing" name="SM_PreSeparation"><Description>Sample FsmState application class. FsmState component for the survival mode pre-separation submode.</Description><InitAction kind="operation" status="generable"><Description>Reset the telemetry manager, reset the telecommand manager.</Description></InitAction><TerminationCheck kind="operation" status="generable"><Description>Terminate when the separation is detected.</Description></TerminationCheck></Custom></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><NextState kind="property" type="component" value="SM_SunAcquisition" status="provided" name="NextState"/><UnstableFsmState kind="component" type="FSM/DC_UnstableFsmState" status="provided" name="SM_PostSeparation"><Description>FsmState component for the survival mode post-separation submode.</Description></UnstableFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="2" status="provided"/><NextState kind="property" type="component" value="SM_SunPointing" status="provided" name="NextState"/><UnstableFsmState kind="component" type="FSM/DC_UnstableFsmState" status="provided" name="SM_SunAcquisition"><Description>FsmState component for survival mode sun-acquisition submode.</Description></UnstableFsmState></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="3" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="SM_SunPointing"><Description>FsmState component for survival mode sun-pointing submode.</Description></DummyFsmState></FsmState><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" name="TargetState" type="component" value="SM_PostSeparation" status="provided"/><FromFsmEvent kind="component" type="FSM/DC_FromFsmEvent" status="provided" name="SM_PreToPost"><Description>FsmEvent component to trigger transition from SM pre- to post-seperation.</Description><FromFsmState kind="property" name="StartingState" type="component" value="SM_PreSeparation" status="provided"/></FromFsmEvent></FsmEvent></FSM><FSM kind="component" type="FSM/CC_FSM" status="provided" name="FDIR_FSM"><Description>FSM for the sample application. This FSM controls FDIR operation.</Description><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="0" status="provided"/><Custom kind="component" type="FSM/DC_AfsFsmState" status="missing" name="AFS"><Description>Sample application class. FsmState component representing the AFS state of the FDIR FSM.</Description><InitAction kind="operation" status="generable"><Description>Disable all reconfigurations; disable all telecommands to change the enable/disable status of the reconfiguration managers.</Description></InitAction><ExitAction kind="operation" status="generable"><Description>Enable all reconfigurations; enable all telecommands to change the enable/disable status of the reconfiguration managers.</Description></ExitAction></Custom></FsmState><FsmState kind="interface" type="FSM/FsmState" status="provided"><Index kind="property" type="int" value="1" status="provided"/><DummyFsmState kind="component" type="FSM/DC_DummyFsmState" status="provided" name="AFO"><Description>FsmState component representing the AFO state of the FDIR FSM.</Description></DummyFsmState></FsmState><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" name="TargetState" type="component" value="AFO" status="provided"/><FromFsmEvent kind="component" type="FSM/DC_FromFsmEvent" status="provided" name="AFS_to_AFO"><Description>FsmEvent component to trigger a transition from the AFS to AFO state of the FDIR FSM.</Description><FromFsmState kind="property" name="StartingState" type="component" value="AFS" status="provided"/></FromFsmEvent></FsmEvent><FsmEvent kind="interface" type="FSM/DC_FsmEvent" status="provided"><TargetState kind="property" name="TargetState" type="component" value="AFS" status="provided"/><FromFsmEvent kind="component" type="FSM/DC_FromFsmEvent" status="provided" name="AFO_to_AFS"><Description>FsmEvent component to trigger a transition from the AFO to AFS state of the FDIR FSM.</Description><FromFsmState kind="property" name="StartingState" type="component" value="AFO" status="provided"/></FromFsmEvent></FsmEvent></FSM></ObsApplication>