//
// Copyright 2004 P&P Software GmbH - All Rights Reserved
//
// TestCaseBasicPUSTmStream_1.h
//
// Version	1.0
// Date		11.01.04
// Author	A. Pasetti (P&P Software)

#ifndef TestCaseBasicPUSTmStream_1H
#define TestCaseBasicPUSTmStream_1H

#include "../Utilities/TestCasePUSFull.h"

/**
 * Check the functionality of the <code>DC_BasicPUSTmStream</code>
 * class. An instance of this class is created and a sample telemetry packet (instance
 * of class <code>DC_DummyPUSTelemetryPacket</code>) is
 * retrieved from the telemetry packet factory. The following
 * specific checks are then performed:<ol>
 * <li>The correctness of the class identifier is checked.</li>
 * <li>It is checked that the TM stream is initially not configured.</li>
 * <li>The value of the stream capacity is set and read back. The correctness
 * of the read-back value is checked.</li>
 * <li>The value of the start address of the telemetry write area is set and read back.
 * The correctness of the read-back value is checked. </li>
 * <li>It is checked that the TM stream is now configured.</li>
 * <li>The value of the packet counter is retrieved and it is checked that is equal to
 * zero. </li>
 * <li>A telemetry packet is written to the stream and the correctness of the write
 * operation is checked.</li>
 * <li>It is checked that the packet counter and the sequence counter are 
 * incremented by one after the write
 * operation.</li>
 * <li>The packet is repeatedly written until the telemetry write area is filled.
 * It is checked that a write operation results
 * in the generation of the correct event report.</li>
 * <li>The telemetry area is reset and it is checked that the next
 * write request executes successfully.</li>
 * <li>It is checked that the packet counter and the write counters are reset to 0 and 1,
 * respectively.</li>
 * <li>The last two checks are repeated using a flush operation instead of a reset
 * operation and it is checked that the outcome is the same.</li>
 * </ol>
 * @see DC_BasicPUSTmStream
 * @author Alessandro Pasetti (P&P Software GmbH)
 * @version 1.0
 */
class TestCaseBasicPUSTmStream_1 : public TestCaseWithFactories {
  private:
    unsigned char* tmArea;
    DC_DummyPUSTelemetryPacket* pTM;
    DC_BasicPUSTmStream* pTMS;

  public :
     /**
      * Set the identifier and the name of the test case to, respectively,
      * ID_BASICPUSTMSTREAM*10+1 and "TestCaseBasicPUSTmStream_1".
      */
     TestCaseBasicPUSTmStream_1(void);

     /**
      * Execute the test case. See class comment for details.
      */
     virtual void runTestCase(void);

     /**
      * Check the correctness of the telemetry image written by the telemetry stream under test.
      * The telemetry image is assumed to start at location <code>start</code> in the
      * telemetry write area and the value of the application data generated by the
      * telemetry packet is assumed to be <code>value</code>.
      * @param start the start location of the telemetry image
      * @param value the value of the application data
      * @return true if the telemetry image is correct, false otherwise
      */
     bool checkTmImage(unsigned int start, unsigned char value);

};

#endif
